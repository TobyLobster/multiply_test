; mult73.a
; from TobyLobster
;
; 8 bit x 8 bit unsigned multiply, 16 bit result
; Average cycles: 1174.08
; 28 bytes

* = $0200

; Slow(!) small multiply, using repeated addition!
; On Entry:
;   A: multiplier
;   X: multiplicand
; On Exit:
;   (A, Y): product
mult
    sta multiplier
    ; if X>=multiplier then swap X and multiplier
    cpx multiplier
    bcc +
    stx multiplier
    tax
+

    lda #0          ; product low
    tay             ; product high
    inx             ; increment multiplicand
--
    clc
-
    dex             ; decrement
    beq +           ; branch if we are done
multiplier = *+1
    adc #0          ; add multiplier (self modifying code)
    bcc -           ; loop back if no carry
    iny             ; increment high byte of product
    bcs --          ; always loop back
+
    rts             ;
