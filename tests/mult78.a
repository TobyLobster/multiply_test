; mult78.a
; from 'Commodore 128 assembly language programming' by Mark Andrews (1986) https://archive.org/details/Commodore_128_Assembly_Language_Programming/page/n165/mode/2up
; I swapped names of prodh and prodl to avoid confusion
;
; 8 bit x 8 bit unsigned multiply, 16 bit result
; Average cycles: 188.00
; 20 bytes

mpr     = $02
mpd     = $03
prodl   = $04

* = $0200

; 8 bit unsigned multiply, 16 bit result
;
; On Entry:
;   mpr: multiplier
;   mpd: multiplicand
; On Exit:
;   (A, prodl): product
mult
    lda #0
    sta prodl
    ldx #8
loop
    lsr mpr
    bcc noadd
    clc
    adc mpd
noadd
    ror
    ror prodl
    dex
    bne loop
    ; sta prodh
    rts
